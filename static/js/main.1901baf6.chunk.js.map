{"version":3,"sources":["ColorContext.js","WelcomeText.js","Button.js","App.js","index.js"],"names":["ColorContext","React","createContext","ContextProvider","children","useState","color","quote","state","setstate","Provider","value","handleChange","console","log","fetch","then","res","json","jsonRes","newColor","document","body","style","backgroundColor","WelcomeText","props","useContext","width","height","margin","Button","onClick","App","ReactDOM","render","getElementById"],"mappings":"sKAEaA,EAAeC,IAAMC,cAAc,OAwBjCC,MAtBf,YAAwC,IAAbC,EAAY,EAAZA,SACzB,EAA0BC,mBAAS,CAAEC,MAAO,MAAOC,MAAO,KAA1D,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OACE,cAACT,EAAaU,SAAd,CAAuBC,MAAO,CAAEH,QAAOI,aAbpB,WACnBC,QAAQC,IAAI,0CACZC,MAAM,oDACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAIC,EAA2B,QAAhBZ,EAAMF,MAAkB,QAAU,MACjDG,EAAS,CAAEH,MAAOc,EAAUb,MAAOY,EAAQZ,WAE/Cc,SAASC,KAAKC,MAAMC,gBAAkBhB,EAAMF,QAK5C,SACGF,KCSQqB,EAfK,SAACC,GACnB,IAAOlB,EAASmB,qBAAW3B,GAApBQ,MAMP,OACE,sBAAKe,MAAO,CAAEjB,MAAOE,EAAMF,MAAOsB,MAAM,QAASC,OAAO,QAASC,OAAQ,YAAzE,UACE,2GACA,4BAAKtB,EAAMD,YCdFwB,EAPA,WACX,IAAOnB,EAAgBe,qBAAW3B,GAA3BY,aACP,OACI,wBAAQoB,QAASpB,EAAjB,4BCSOqB,MAXf,WACE,OACE,qBAAKV,MAAO,CAAEK,MAAO,QAASC,OAAQ,QAASC,OAAQ,YAAvD,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UCNRI,IAASC,OAAO,cAAC,EAAD,IAASd,SAASe,eAAe,W","file":"static/js/main.1901baf6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport const ColorContext = React.createContext(\"red\");\n\nfunction ContextProvider({ children }) {\n  const [state, setstate] = useState({ color: \"red\", quote: \"\" });\n\n  const handleChange = () => {\n    console.log(\"handleChange çalıştı\");\n    fetch(\"http://quotes.stormconsultancy.co.uk/random.json\")\n      .then((res) => res.json())\n      .then((jsonRes) => {\n        let newColor = state.color === \"red\" ? \"black\" : \"red\";\n        setstate({ color: newColor, quote: jsonRes.quote });\n      });\n    document.body.style.backgroundColor = state.color;\n  };\n\n  //console.log(state)\n  return (\n    <ColorContext.Provider value={{ state, handleChange }}>\n      {children}\n    </ColorContext.Provider>\n  );\n}\n\nexport default ContextProvider;\n","import React, {useContext, useEffect} from 'react';\nimport { ColorContext } from './ColorContext';\n\n// const WelcomeText = (props) => {\n//   const { Consumer } = ColorContext;\n\n//   return (\n//     <Consumer>\n//       {color => <p style={{ color }}>Hello world!!</p>}\n//     </Consumer>\n//   );\n// };\n\n\n\nconst WelcomeText = (props) => {\n  const {state} = useContext(ColorContext)   // take state context from ColorContext\n\n  /**this is third version; with every state update this component rendering and useEffect works */\n// let differ = state.color === \"red\" ? \"black\" : \"red\" ;\n// useEffect(() => document.body.style.backgroundColor = differ);\n\n  return (\n    <div style={{ color: state.color, width:\"300px\", height:\"180px\", margin: \"0px auto\"}}>\n      <p >Get a random quote from \"http://quotes.stormconsultancy.co.uk/random.json\"</p>\n      <p >{state.quote}</p>\n  </div>\n  );\n};\n\nexport default WelcomeText;\n","import React, {useContext} from 'react';\r\nimport { ColorContext } from './ColorContext';\r\n\r\n\r\nconst Button = () => {\r\n    const {handleChange} = useContext(ColorContext)  //takes handleChange method context from ColorContext\r\n    return (\r\n        <button onClick={handleChange}>Toggle color!</button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\";\nimport ContextProvider from \"./ColorContext\";\nimport WelcomeText from \"./WelcomeText\";\nimport Button from \"./Button\";\n\nfunction App() {\n  return (\n    <div style={{ width: \"300px\", height: \"300px\", margin: \"0px auto\" }}>\n      <ContextProvider>\n        <WelcomeText />\n        <Button />\n      </ContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}